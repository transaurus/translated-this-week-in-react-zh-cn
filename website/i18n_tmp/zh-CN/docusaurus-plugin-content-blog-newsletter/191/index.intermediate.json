{
  "source_path": "/var/folders/71/_th644vd5kxcpmnfqgtm275m0000gn/T/e2e_transaurus_ut53hddt/tmp9qn097ks/website/newsletter/191/index.mdx",
  "segments": [
    {
      "id": "58cfcc64",
      "translatable": false,
      "content": "---\nslug: /191\ntitle: \"This Week In React #191: React-Router, Remix, React Query, Suspense, Compiler, Remotion, CodeHike, next-safe-action, Framer-Motion, React-Admin, StyleX, Mobx, FlashList, RN native bridging, Expo, TypeScript, State of JS, Node ...\"\nauthors: [slorber]\ndate: 06-26-2024\n---",
      "sourceMdx": "---\nslug: /191\ntitle: \"This Week In React #191: React-Router, Remix, React Query, Suspense, Compiler, Remotion, CodeHike, next-safe-action, Framer-Motion, React-Admin, StyleX, Mobx, FlashList, RN native bridging, Expo, TypeScript, State of JS, Node ...\"\nauthors: [slorber]\ndate: 06-26-2024\n---",
      "nodeType": "yaml",
      "translated_content": "@@untranslatable_placeholder_58cfcc64"
    },
    {
      "id": "3fbbcc07",
      "translatable": true,
      "content": "Hi everyone!",
      "sourceMdx": "Hi everyone!",
      "nodeType": "paragraph",
      "translated_content": "大家好！"
    },
    {
      "id": "7e5c5a39",
      "translatable": true,
      "content": "This week it looks like we are finally entering the summer/holiday season and the pace of major React announcements is slowing down. We will also be taking a short summer break, skip 2 issues, and be back on July 17.",
      "sourceMdx": "This week it looks like we are finally entering the summer/holiday season and the pace of major React announcements is slowing down. We will also be taking a short summer break, skip 2 issues, and be back on July 17.",
      "nodeType": "paragraph",
      "translated_content": "本周我们似乎终于进入了夏季/假期模式，React的重大公告节奏明显放缓。我们将短暂休刊两期，于7月17日恢复更新。"
    },
    {
      "id": "8d66f911",
      "translatable": true,
      "content": "On the React side, we continue to have interesting content related to the Suspense drama from last week. A new React Router feature permits you to code split your route tree.",
      "sourceMdx": "On the React side, we continue to have interesting content related to the Suspense drama from last week. A new React Router feature permits you to code split your route tree.",
      "nodeType": "paragraph",
      "translated_content": "React方面，上周关于Suspense的争议仍在持续发酵。React Router的新特性现在支持对路由树进行代码分割。"
    },
    {
      "id": "ad8fd492",
      "translatable": true,
      "content": "On the React Native side, it looks like the team is trying to release v0.75 as RC, and encountering some roadblocks, but it’ll probably be out soon.",
      "sourceMdx": "On the React Native side, it looks like the team is trying to release v0.75 as RC, and encountering some roadblocks, but it’ll probably be out soon.",
      "nodeType": "paragraph",
      "translated_content": "React Native团队正试图发布v0.75的候选版本，虽然遇到些阻碍，但应该很快就能推出。"
    },
    {
      "id": "86b54d44",
      "translatable": true,
      "content": "The most exciting news to me is the TypeScript 5.5 stable release: it’s a great one, notably for predicate type inference! The State of JS survey results are also out if you want to explore JS trends.",
      "sourceMdx": "The most exciting news to me is the TypeScript 5.5 stable release: it’s a great one, notably for predicate type inference! The State of JS survey results are also out if you want to explore JS trends.",
      "nodeType": "paragraph",
      "translated_content": "最令人兴奋的消息是TypeScript 5.5稳定版发布：这个版本非常出色，特别是谓词类型推断功能！《JavaScript现状》调查报告也已发布，可供了解JS趋势。"
    },
    {
      "id": "45c63027",
      "translatable": false,
      "content": "<!-- truncate -->",
      "sourceMdx": "<!-- truncate -->",
      "nodeType": "comment",
      "translated_content": "@@untranslatable_placeholder_45c63027"
    },
    {
      "id": "1acb9a05",
      "translatable": true,
      "content": "**💡 [Check this newsletter on Twitter](https://slo.im/thread) - visual format 🎨**",
      "sourceMdx": "**💡 [Check this newsletter on Twitter](https://slo.im/thread) - visual format 🎨**",
      "nodeType": "paragraph",
      "translated_content": "**💡 [在Twitter查看本期简报](https://slo.im/thread) - 可视化版式 🎨**"
    },
    {
      "id": "fb3d50cd",
      "translatable": true,
      "content": "***",
      "sourceMdx": "---",
      "nodeType": "thematicBreak",
      "translated_content": "---"
    },
    {
      "id": "0adfe0aa",
      "translatable": false,
      "content": "[//]: <> (ESM Import/Export)",
      "sourceMdx": "import Support from \"../_support.mdx\";",
      "nodeType": "mdxjsEsm",
      "translated_content": "@@untranslatable_placeholder_0adfe0aa"
    },
    {
      "id": "1941846d",
      "translatable": false,
      "content": "<Support />",
      "sourceMdx": "<Support />",
      "nodeType": "mdxJsxFlowElement",
      "translated_content": "@@untranslatable_placeholder_1941846d"
    },
    {
      "id": "a5403c6e",
      "translatable": true,
      "content": "***",
      "sourceMdx": "---",
      "nodeType": "thematicBreak",
      "translated_content": "---"
    },
    {
      "id": "d06306f7",
      "translatable": true,
      "content": "## 💸 Sponsor",
      "sourceMdx": "## 💸 Sponsor {#sponsor1}",
      "nodeType": "heading",
      "translated_content": "## 💸 赞助商 {#sponsor1}"
    },
    {
      "id": "73ab96a3",
      "translatable": true,
      "content": "[![The Category-Defining React Grid for Your Enterprise](/emails/issues/190/advertfinal.jpg)](https://1771technologies.com/graphitegrid)",
      "sourceMdx": "[![The Category-Defining React Grid for Your Enterprise](/emails/issues/190/advertfinal.jpg)](https://1771technologies.com/graphitegrid)",
      "nodeType": "paragraph",
      "translated_content": "[![企业级React数据网格的品类定义者](/emails/issues/190/advertfinal.jpg)](https://1771technologies.com/graphitegrid)"
    },
    {
      "id": "7499a4e7",
      "translatable": true,
      "content": "**[The Category-Defining React Grid for Your Enterprise](https://1771technologies.com/graphitegrid)**",
      "sourceMdx": "**[The Category-Defining React Grid for Your Enterprise](https://1771technologies.com/graphitegrid)**",
      "nodeType": "paragraph",
      "translated_content": "**[企业级React数据网格的品类定义者](https://1771technologies.com/graphitegrid)**"
    },
    {
      "id": "517051a7",
      "translatable": true,
      "content": "Data grids are complex components of web applications, but current solutions are inefficient, require a lot of maintenance, and perform poorly. [Graphite Grid](https://1771technologies.com/graphitegrid) transforms the landscape with two key features: retargetable rendering and reactive signal state.",
      "sourceMdx": "Data grids are complex components of web applications, but current solutions are inefficient, require a lot of maintenance, and perform poorly. [Graphite Grid](https://1771technologies.com/graphitegrid) transforms the landscape with two key features: retargetable rendering and reactive signal state.",
      "nodeType": "paragraph",
      "translated_content": "数据网格是Web应用中的复杂组件，但现有解决方案效率低下、维护成本高且性能不佳。[Graphite Grid](https://1771technologies.com/graphitegrid)通过两大特性改变格局：可重定向渲染和响应式信号状态。"
    },
    {
      "id": "135468ee",
      "translatable": true,
      "content": "**Graphite Grid** separates grid state from view logic, allowing a single unified state model to support a variety of render targets, declaratively or imperatively. It includes a **DOM and Canvas** renderer, giving developers flexible, high-performance options 🚀.",
      "sourceMdx": "**Graphite Grid** separates grid state from view logic, allowing a single unified state model to support a variety of render targets, declaratively or imperatively. It includes a **DOM and Canvas** renderer, giving developers flexible, high-performance options 🚀.",
      "nodeType": "paragraph",
      "translated_content": "**Graphite Grid**将网格状态与视图逻辑分离，允许单一统一状态模型支持多种渲染目标（声明式或命令式）。包含**DOM和Canvas**渲染器，为开发者提供灵活的高性能选择🚀。"
    },
    {
      "id": "33331f27",
      "translatable": true,
      "content": "Graphite Grid is declarative and consistent, leveraging state signals to ensure seamless integration with your application. Designed with **React in mind**, it is the only JavaScript data grid built with React's state management primitives. [Try it now!](https://1771technologies.com/graphitegrid/demo)",
      "sourceMdx": "Graphite Grid is declarative and consistent, leveraging state signals to ensure seamless integration with your application. Designed with **React in mind**, it is the only JavaScript data grid built with React's state management primitives. [Try it now!](https://1771technologies.com/graphitegrid/demo)",
      "nodeType": "paragraph",
      "translated_content": "Graphite Grid采用声明式设计，通过状态信号确保与应用无缝集成。这是唯一基于React状态管理原语构建的JavaScript数据网格。[立即试用！](https://1771technologies.com/graphitegrid/demo)"
    },
    {
      "id": "602e59c7",
      "translatable": true,
      "content": "***",
      "sourceMdx": "---",
      "nodeType": "thematicBreak",
      "translated_content": "---"
    },
    {
      "id": "54268405",
      "translatable": true,
      "content": "## ⚛️ React",
      "sourceMdx": "## ⚛️ React {#react}",
      "nodeType": "heading",
      "translated_content": "## ⚛️ React {#react}"
    },
    {
      "id": "8af76f3d",
      "translatable": true,
      "content": "[![React-Router 6.24 - Lazy Route Discovery](/emails/issues/191/rr.jpg)](https://github.com/remix-run/react-router/blob/main/CHANGELOG.md#v6240)",
      "sourceMdx": "[![React-Router 6.24 - Lazy Route Discovery](/emails/issues/191/rr.jpg)](https://github.com/remix-run/react-router/blob/main/CHANGELOG.md#v6240)",
      "nodeType": "paragraph",
      "translated_content": "[![React-Router 6.24 - 惰性路由发现](/emails/issues/191/rr.jpg)](https://github.com/remix-run/react-router/blob/main/CHANGELOG.md#v6240)"
    },
    {
      "id": "a9d49f92",
      "translatable": true,
      "content": "**📦 [React-Router 6.24 - Lazy Route Discovery](https://github.com/remix-run/react-router/blob/main/CHANGELOG.md#v6240)**",
      "sourceMdx": "**📦 [React-Router 6.24 - Lazy Route Discovery](https://github.com/remix-run/react-router/blob/main/CHANGELOG.md#v6240)**",
      "nodeType": "paragraph",
      "translated_content": "**📦 [React-Router 6.24 - 惰性路由发现](https://github.com/remix-run/react-router/blob/main/CHANGELOG.md#v6240)**"
    },
    {
      "id": "a44047a5",
      "translatable": true,
      "content": "This React Router release includes a new `unstable_patchRoutesOnMiss` hook that will be called when React Router can’t match any existing route. It permits you to load additional routes and implement code splitting for your routes instead of keeping them all in a single monolithic module. A welcome feature for large apps with thousands of routes, that now don’t need to load all of them upfront, delaying hydration.",
      "sourceMdx": "This React Router release includes a new `unstable_patchRoutesOnMiss` hook that will be called when React Router can’t match any existing route. It permits you to load additional routes and implement code splitting for your routes instead of keeping them all in a single monolithic module. A welcome feature for large apps with thousands of routes, that now don’t need to load all of them upfront, delaying hydration.",
      "nodeType": "paragraph",
      "translated_content": "新版React Router新增了`unstable_patchRoutesOnMiss`钩子，当路由匹配失败时触发。该特性允许动态加载路由模块，实现路由代码分割，避免将所有路由集中在单一模块导致水合延迟。对于包含数千条路由的大型应用尤为实用。"
    },
    {
      "id": "f7ef78f9",
      "translatable": true,
      "content": "Remix was supposed to take a nap, but apparently not yet! 📦 [Remix 2.10](https://remix.run/docs/en/main/start/changelog#v2100) is out and already leverages that new React Router feature by exposing it through a convenient [“Fog of War”](https://remix.run/docs/en/main/guides/fog-of-war) feature that you can enable with a simple `future.unstable_fogOfWar` flag. An early discovery optimization has also been implemented to avoid waterfalls.",
      "sourceMdx": "Remix was supposed to take a nap, but apparently not yet! 📦 [Remix 2.10](https://remix.run/docs/en/main/start/changelog#v2100) is out and already leverages that new React Router feature by exposing it through a convenient [“Fog of War”](https://remix.run/docs/en/main/guides/fog-of-war) feature that you can enable with a simple `future.unstable_fogOfWar` flag. An early discovery optimization has also been implemented to avoid waterfalls.",
      "nodeType": "paragraph",
      "translated_content": "Remix本应进入休眠期，但显然还没到时候！📦 [Remix 2.10](https://remix.run/docs/en/main/start/changelog#v2100)已发布，通过便捷的[\"战争迷雾\"](https://remix.run/docs/en/main/guides/fog-of-war)功能直接集成了该特性，只需设置`future.unstable_fogOfWar`标志即可启用。还实现了早期发现优化以避免请求瀑布。"
    },
    {
      "id": "49d8fe2a",
      "translatable": true,
      "content": "***",
      "sourceMdx": "---",
      "nodeType": "thematicBreak",
      "translated_content": "---"
    },
    {
      "id": "9b797309",
      "translatable": true,
      "content": "* 💸 [Meilisearch — Build fast, typo-tolerant search with React](https://dub.sh/ueC2f57)\n* 👀 [React.dev PR - Add branding context menu](https://github.com/reactjs/react.dev/pull/6986): Right-click the website navbar logo to access the official svgs and brand colors of React.\n* 👀 [Next.js PR draft - `nextConfig.requiredEnv`](https://github.com/vercel/next.js/pull/67187)\n* 👀 [Next.js PR draft - type check for `env`](https://github.com/vercel/next.js/pull/67157s)\n* 🐦 [Joe Savona - \"Some thoughts on the suspense changes from 19 RC\"](https://x.com/en_JS/status/1803480672327311425): To avoid situations such as past week’s Suspense drama, the React team is working on changes to get feedback earlier (working groups, RFC, canary…).\n* 🐦 [Lee Robinsin - \"Here's where we're headed with caching in Next.js\"](https://x.com/leeerob/status/1803824227704877236): “Our goal is to make all async operations (like doing a `fetch`) opt into dynamic rendering”, “We believe Partial Prerendering will become the default”.\n* 🗓️ [React Rally](https://reactrally.com/?utm_source=thisweekinreact) - 🇺🇸Utah - 12-13, August - Get a 10% discount with code \"TWIR\". There’s a React Server Components [workshop](https://reactrally.com/workshop) with Kent C. Dodds\n* 📨 [ECMAScript News - Discover our partners' newsletter to keep up to date with ES, TC39, JS tooling, and runtimes](https://ecmascript.news/?utm_source=thisweekinreact)\n* 📜 [Component, colocation, composition: A note on the state of React](https://bobaekang.com/blog/component-colocation-composition/): The recent Suspense drama highlights the gap between React’s component-oriented vision and its current limitations.\n* 📜 [From markdown to video - Animated code walkthroughs with Code Hike and Remotion](https://v1.codehike.org/blog/remotion): If you have seen recent code animation videos of Matt Pocock or Delba, here’s a great article and demos to understand how it works.\n* 📜 [Understanding React Compiler](https://tonyalicea.dev/blog/understanding-react-compiler/): Explains how the React compiler work, starting from the basics (transpiler, AST, memoization), then analyzing the compiler output of a concrete example.\n* 📜 [Wait for pending: A (not great) alternative Suspense algorithm](https://dev.to/alexandereardon/wait-for-pending-a-not-great-alternative-suspense-algorithm-1gdl): Explores the possibility of a different algorithm for Suspense, with different tradeoffs.\n* 📜 [How to make draggable Framer Motion elements snap to breakpoints](https://sinja.io/blog/framer-motion-drag-snap-points): Interactive article implementation snap points on top of Framer Motion, including inertia/velocity support.\n* 📜 [Mobx Memoizes Components (You don't need React Compiler)](https://www.mikejohnson.dev/posts/2024/06/mobx-react-compiler): Takes an existing demo using the React compiler and turns it into an optimized Mobx app with minimal changes. MobX prevents re-renders by auto-tracking dependencies. Note this [Mobx issue](https://github.com/mobxjs/mobx/issues/3874) explains why Mobx (based on proxies) is not compatible with the compiler, and lib creator also confirms it’s already optimized.\n* 📜 [Web Workers, Comlink, Vite and TanStack Query](https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query): React Query being an “async state manager”, it also works well to offload expensive work from the main thread.\n* 📜 [Storybook - Visual testing: The greatest trick in UI development](https://storybook.js.org/blog/visual-testing-is-the-greatest-trick-in-ui-development/): I agree that too many devs miss out on visual regression testing. It has a really great ROI, considering how easy it is to add to an existing Storybook. As this article shows, covering the same component with React Testing Library requires more work.\n* 📜 [Communication Between Client Components in Next.js](https://www.thisdot.co/blog/communication-between-client-components-in-next-js): With RSCs, new challenges emerged to make 2 client components communicate, and you might not be able to lift the state up unless the parent is also a client component. This article proposes 3 solutions: using a Provider, search params, and server state.\n* 📜 [How to Validate Form in Remix with clientAction](https://sergiodxa.com/tutorials/validate-form-in-remix-with-clientaction): Using the new Remix `clientAction` export can nicely complete the server `action` validation and progressively enhance your form with local errors.\n* 📜 [Type-safe TanStack Query with OpenAPI](https://ruanmartinelli.com/blog/tanstack-query-openapi): Shows how to create generic React Query hooks (`useGetQuery`, `usePostMutation`...) that are fully typed according to an OpenAPI specification.\n* 📜 [How To Use Google Sheets as a Database With React via Next.js](https://thenewstack.io/how-to-use-google-sheets-as-a-database-with-react-and-ssr/)\n* 📜 [Is it ok to pass setState as a prop in React?](https://tigerabrodi.blog/is-it-ok-to-pass-setstate-as-a-prop-in-react)\n* 📦 [StyleX 0.7 - CLI (experimental), Literal names for CSS variables](https://stylexjs.com/blog/v0.7.0): New CLI transforms an entire folder and can be an alternative to the bundler integration.\n* 📦 [Next-Safe-Action 7.0 - Type safe and validated Server Actions](https://github.com/TheEdoRan/next-safe-action/releases/tag/v7.0.0): See also the [v6 to v7 migration guide](https://next-safe-action.dev/docs/migrations/v6-to-v7).\n* 📦 [Astro 4.11 - 500 page improvements, `<Code>` component Shiki transformer](https://astro.build/blog/astro-4110/)\n* 📦 [React-Admin 5.0 - Improves on UI, DX, app init, Data Providers, forms…](https://marmelab.com/blog/2024/06/20/react-admin-v5.html)\n* 📦 [Shopify Hydrogen Update - Visual Editor, Optimistic Cart, Vite stable, RichText component, SEO meta export…](https://hydrogen.shopify.dev/update/summer-editions-24-announcing-the-hydrogen-visual-editor-and-a-ton-of-dx-improvements)\n* 📦 [stan-js - Minimalistic state management library](https://codemask-labs.github.io/stan-js/)\n* 🎥 [Jack Herrington - React 19's useOptimistic: everything you need to know](https://www.youtube.com/watch?v=QWVr7uDyBXE)\n* 🎥 [Theo - I Used To Hate Next.js…](https://www.youtube.com/watch?v=6q1eL7IcKzw)\n* 🎥 [Dave Gray - Nextjs Server Actions Just Got Better (using next-safe-action)](https://www.youtube.com/watch?v=ahB3DgUMs1A)\n* 🎥 [Ryan Carniato - Facing Frontend's Existential Crisis, React Summit 2024](https://www.youtube.com/watch?v=nzbV0YgSBuo)\n* 🎙️ [Syntax - What’s Next for NextJS with Tim Neutkens](https://www.youtube.com/watch?v=fXugpgknScY)",
      "sourceMdx": "- 💸 [Meilisearch — Build fast, typo-tolerant search with React](https://dub.sh/ueC2f57)\n- 👀 [React.dev PR - Add branding context menu](https://github.com/reactjs/react.dev/pull/6986): Right-click the website navbar logo to access the official svgs and brand colors of React.\n- 👀 [Next.js PR draft - `nextConfig.requiredEnv`](https://github.com/vercel/next.js/pull/67187)\n- 👀 [Next.js PR draft - type check for `env`](https://github.com/vercel/next.js/pull/67157s)\n- 🐦 [Joe Savona - \"Some thoughts on the suspense changes from 19 RC\"](https://x.com/en_JS/status/1803480672327311425): To avoid situations such as past week’s Suspense drama, the React team is working on changes to get feedback earlier (working groups, RFC, canary…).\n- 🐦 [Lee Robinsin - \"Here's where we're headed with caching in Next.js\"](https://x.com/leeerob/status/1803824227704877236): “Our goal is to make all async operations (like doing a `fetch`) opt into dynamic rendering”, “We believe Partial Prerendering will become the default”.\n- 🗓️ [React Rally](https://reactrally.com/?utm_source=thisweekinreact) - 🇺🇸Utah - 12-13, August - Get a 10% discount with code \"TWIR\". There’s a React Server Components [workshop](https://reactrally.com/workshop) with Kent C. Dodds\n- 📨 [ECMAScript News - Discover our partners' newsletter to keep up to date with ES, TC39, JS tooling, and runtimes](https://ecmascript.news/?utm_source=thisweekinreact)\n- 📜 [Component, colocation, composition: A note on the state of React](https://bobaekang.com/blog/component-colocation-composition/): The recent Suspense drama highlights the gap between React’s component-oriented vision and its current limitations.\n- 📜 [From markdown to video - Animated code walkthroughs with Code Hike and Remotion](https://v1.codehike.org/blog/remotion): If you have seen recent code animation videos of Matt Pocock or Delba, here’s a great article and demos to understand how it works.\n- 📜 [Understanding React Compiler](https://tonyalicea.dev/blog/understanding-react-compiler/): Explains how the React compiler work, starting from the basics (transpiler, AST, memoization), then analyzing the compiler output of a concrete example.\n- 📜 [Wait for pending: A (not great) alternative Suspense algorithm](https://dev.to/alexandereardon/wait-for-pending-a-not-great-alternative-suspense-algorithm-1gdl): Explores the possibility of a different algorithm for Suspense, with different tradeoffs.\n- 📜 [How to make draggable Framer Motion elements snap to breakpoints](https://sinja.io/blog/framer-motion-drag-snap-points): Interactive article implementation snap points on top of Framer Motion, including inertia/velocity support.\n- 📜 [Mobx Memoizes Components (You don't need React Compiler)](https://www.mikejohnson.dev/posts/2024/06/mobx-react-compiler): Takes an existing demo using the React compiler and turns it into an optimized Mobx app with minimal changes. MobX prevents re-renders by auto-tracking dependencies. Note this [Mobx issue](https://github.com/mobxjs/mobx/issues/3874) explains why Mobx (based on proxies) is not compatible with the compiler, and lib creator also confirms it’s already optimized.\n- 📜 [Web Workers, Comlink, Vite and TanStack Query](https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query): React Query being an “async state manager”, it also works well to offload expensive work from the main thread.\n- 📜 [Storybook - Visual testing: The greatest trick in UI development](https://storybook.js.org/blog/visual-testing-is-the-greatest-trick-in-ui-development/): I agree that too many devs miss out on visual regression testing. It has a really great ROI, considering how easy it is to add to an existing Storybook. As this article shows, covering the same component with React Testing Library requires more work.\n- 📜 [Communication Between Client Components in Next.js](https://www.thisdot.co/blog/communication-between-client-components-in-next-js): With RSCs, new challenges emerged to make 2 client components communicate, and you might not be able to lift the state up unless the parent is also a client component. This article proposes 3 solutions: using a Provider, search params, and server state.\n- 📜 [How to Validate Form in Remix with clientAction](https://sergiodxa.com/tutorials/validate-form-in-remix-with-clientaction): Using the new Remix `clientAction` export can nicely complete the server `action` validation and progressively enhance your form with local errors.\n- 📜 [Type-safe TanStack Query with OpenAPI](https://ruanmartinelli.com/blog/tanstack-query-openapi): Shows how to create generic React Query hooks (`useGetQuery`, `usePostMutation`...) that are fully typed according to an OpenAPI specification.\n- 📜 [How To Use Google Sheets as a Database With React via Next.js](https://thenewstack.io/how-to-use-google-sheets-as-a-database-with-react-and-ssr/)\n- 📜 [Is it ok to pass setState as a prop in React?](https://tigerabrodi.blog/is-it-ok-to-pass-setstate-as-a-prop-in-react)\n- 📦 [StyleX 0.7 - CLI (experimental), Literal names for CSS variables](https://stylexjs.com/blog/v0.7.0): New CLI transforms an entire folder and can be an alternative to the bundler integration.\n- 📦 [Next-Safe-Action 7.0 - Type safe and validated Server Actions](https://github.com/TheEdoRan/next-safe-action/releases/tag/v7.0.0): See also the [v6 to v7 migration guide](https://next-safe-action.dev/docs/migrations/v6-to-v7).\n- 📦 [Astro 4.11 - 500 page improvements, `<Code>` component Shiki transformer](https://astro.build/blog/astro-4110/)\n- 📦 [React-Admin 5.0 - Improves on UI, DX, app init, Data Providers, forms…](https://marmelab.com/blog/2024/06/20/react-admin-v5.html)\n- 📦 [Shopify Hydrogen Update - Visual Editor, Optimistic Cart, Vite stable, RichText component, SEO meta export…](https://hydrogen.shopify.dev/update/summer-editions-24-announcing-the-hydrogen-visual-editor-and-a-ton-of-dx-improvements)\n- 📦 [stan-js - Minimalistic state management library](https://codemask-labs.github.io/stan-js/)\n- 🎥 [Jack Herrington - React 19's useOptimistic: everything you need to know](https://www.youtube.com/watch?v=QWVr7uDyBXE)\n- 🎥 [Theo - I Used To Hate Next.js…](https://www.youtube.com/watch?v=6q1eL7IcKzw)\n- 🎥 [Dave Gray - Nextjs Server Actions Just Got Better (using next-safe-action)](https://www.youtube.com/watch?v=ahB3DgUMs1A)\n- 🎥 [Ryan Carniato - Facing Frontend's Existential Crisis, React Summit 2024](https://www.youtube.com/watch?v=nzbV0YgSBuo)\n- 🎙️ [Syntax - What’s Next for NextJS with Tim Neutkens](https://www.youtube.com/watch?v=fXugpgknScY)",
      "nodeType": "list",
      "translated_content": "- 💸 [Meilisearch — 用React构建快速、容错的搜索功能](https://dub.sh/ueC2f57)\n- 👀 [React.dev PR - 添加品牌上下文菜单](https://github.com/reactjs/react.dev/pull/6986): 右键点击网站导航栏logo可访问React官方SVG和品牌色值。\n- 👀 [Next.js PR草案 - `nextConfig.requiredEnv`](https://github.com/vercel/next.js/pull/67187)\n- 👀 [Next.js PR草案 - 对`env`进行类型检查](https://github.com/vercel/next.js/pull/67157s)\n- 🐦 [Joe Savona - \"关于React 19 RC中Suspense变更的一些思考\"](https://x.com/en_JS/status/1803480672327311425): 为避免上周Suspense争议重演，React团队正通过工作组、RFC和Canary版本提前收集反馈。\n- 🐦 [Lee Robinsin - \"Next.js缓存机制的演进方向\"](https://x.com/leeerob/status/1803824227704877236): \"我们的目标是让所有异步操作(如`fetch`)都需显式选择动态渲染\"，\"相信部分预渲染(PPR)将成为默认模式\"。\n- 🗓️ [React Rally大会](https://reactrally.com/?utm_source=thisweekinreact) - 美国犹他州 - 8月12-13日 - 使用优惠码\"TWIR\"享9折。Kent C. Dodds将开设[React服务端组件工作坊](https://reactrally.com/workshop)\n- 📨 [ECMAScript动态 - 订阅合作伙伴通讯掌握ES标准、TC39、JS工具链和运行时最新进展](https://ecmascript.news/?utm_source=thisweekinreact)\n- 📜 [组件化、同置与组合：React现状观察](https://bobaekang.com/blog/component-colocation-composition/): 近期Suspense争议凸显了React组件化愿景与当前实现间的鸿沟。\n- 📜 [从Markdown到视频 - 用Code Hike和Remotion制作动态代码演示](https://v1.codehike.org/blog/remotion): 若您看过Matt Pocock或Delba的代码动画视频，本文详解其实现原理并附演示案例。\n- 📜 [深入理解React编译器](https://tonyalicea.dev/blog/understanding-react-compiler/): 从基础概念(转译器、AST、记忆化)切入，通过具体示例分析编译器输出结果。\n- 📜 [等待进行中：一种(不完美)的Suspense替代算法](https://dev.to/alexandereardon/wait-for-pending-a-not-great-alternative-suspense-algorithm-1gdl): 探讨具有不同权衡的Suspense替代方案。\n- 📜 [如何让Framer Motion可拖拽元素吸附到断点](https://sinja.io/blog/framer-motion-drag-snap-points): 在Framer Motion上实现包含惯性/速度支持的吸附点交互方案。\n- 📜 [Mobx自动记忆组件(无需React编译器)](https://www.mikejohnson.dev/posts/2024/06/mobx-react-compiler): 将React编译器示例改造为Mobx优化应用。MobX通过自动依赖追踪避免重复渲染。[此Mobx issue](https://github.com/mobxjs/mobx/issues/3874)说明基于Proxy的Mobx与编译器不兼容，但作者确认其已优化。\n- 📜 [Web Workers、Comlink、Vite与TanStack Query整合实践](https://johnnyreilly.com/web-workers-comlink-vite-tanstack-query): React Query作为\"异步状态管理器\"，也能有效分流主线程计算压力。\n- 📜 [Storybook - 视觉测试：UI开发中的终极技巧](https://storybook.js.org/blog/visual-testing-is-the-greatest-trick-in-ui-development/): 视觉回归测试投入产出比极高，本文对比了在Storybook中添加比用React Testing Library实现相同覆盖更便捷。\n- 📜 [Next.js中客户端组件间的通信方案](https://www.thisdot.co/blog/communication-between-client-components-in-next-js): RSC时代下，提出了Provider、搜索参数和服务器状态三种跨客户端组件通信方案。\n- 📜 [如何在Remix中用clientAction验证表单](https://sergiodxa.com/tutorials/validate-form-in-remix-with-clientaction): 使用Remix新增的`clientAction`导出可渐进增强服务端`action`的本地验证能力。\n- 📜 [基于OpenAPI实现类型安全的TanStack Query](https://ruanmartinelli.com/blog/tanstack-query-openapi): 创建符合OpenAPI规范的全类型React Query钩子(如`useGetQuery`、`usePostMutation`)。\n- 📜 [如何通过Next.js将Google Sheets作为React应用的数据库](https://thenewstack.io/how-to-use-google-sheets-as-a-database-with-react-and-ssr/)\n- 📜 [在React中传递setState作为prop是否合理？](https://tigerabrodi.blog/is-it-ok-to-pass-setstate-as-a-prop-in-react)\n- 📦 [StyleX 0.7 - 实验性CLI工具、CSS变量字面量命名](https://stylexjs.com/blog/v0.7.0): 新增可替代打包器集成的文件夹级转换CLI。\n- 📦 [Next-Safe-Action 7.0 - 类型安全的服务端动作验证](https://github.com/TheEdoRan/next-safe-action/releases/tag/v7.0.0): 另见[v6到v7迁移指南](https://next-safe-action.dev/docs/migrations/v6-to-v7)。\n- 📦 [Astro 4.11 - 500错误页优化、`<Code>`组件Shiki转换器](https://astro.build/blog/astro-4110/)\n- 📦 [React-Admin 5.0 - 优化UI、开发者体验、应用初始化、数据提供器和表单等](https://marmelab.com/blog/2024/06/20/react-admin-v5.html)\n- 📦 [Shopify Hydrogen更新 - 可视化编辑器、乐观购物车、Vite稳定版、RichText组件、SEO元数据导出等](https://hydrogen.shopify.dev/update/summer-editions-24-announcing-the-hydrogen-visual-editor-and-a-ton-of-dx-improvements)\n- 📦 [stan-js - 极简状态管理库](https://codemask-labs.github.io/stan-js/)\n- 🎥 [Jack Herrington - 掌握React 19的useOptimistic](https://www.youtube.com/watch?v=QWVr7uDyBXE)\n- 🎥 [Theo - 我曾讨厌Next.js...](https://www.youtube.com/watch?v=6q1eL7IcKzw)\n- 🎥 [Dave Gray - 更优的Next.js服务端动作实践(使用next-safe-action)](https://www.youtube.com/watch?v=ahB3DgUMs1A)\n- 🎥 [Ryan Carniato - 直面前端的存在主义危机(React Summit 2024)](https://www.youtube.com/watch?v=nzbV0YgSBuo)\n- 🎙️ [Syntax播客 - Tim Neutkens谈Next.js未来规划](https://www.youtube.com/watch?v=fXugpgknScY)"
    },
    {
      "id": "897e0025",
      "translatable": false,
      "content": "<SubscribeFormEmbed placement=\"middle\" />",
      "sourceMdx": "<SubscribeFormEmbed placement=\"middle\" />",
      "nodeType": "mdxJsxFlowElement",
      "translated_content": "@@untranslatable_placeholder_897e0025"
    },
    {
      "id": "c9716ede",
      "translatable": true,
      "content": "***",
      "sourceMdx": "---",
      "nodeType": "thematicBreak",
      "translated_content": "---"
    },
    {
      "id": "39db08de",
      "translatable": true,
      "content": "## 💸 Sponsor",
      "sourceMdx": "## 💸 Sponsor {#sponsor2}",
      "nodeType": "heading",
      "translated_content": "## 💸 赞助商 {#sponsor2}"
    },
    {
      "id": "785750ac",
      "translatable": true,
      "content": "[![WorkOS: Modern Identity Platform for B2B SaaS](/emails/issues/189/WorkOS.jpg)](https://workos.com/?utm_source=thisweekinreact\\&utm_medium=newsletter\\&utm_campaign=q22024)",
      "sourceMdx": "[![WorkOS: Modern Identity Platform for B2B SaaS](/emails/issues/189/WorkOS.jpg)](https://workos.com/?utm_source=thisweekinreact&utm_medium=newsletter&utm_campaign=q22024)",
      "nodeType": "paragraph",
      "translated_content": "[![WorkOS：面向B2B SaaS的现代身份平台](/emails/issues/189/WorkOS.jpg)](https://workos.com/?utm_source=thisweekinreact&utm_medium=newsletter&utm_campaign=q22024)"
    },
    {
      "id": "82e90254",
      "translatable": true,
      "content": "**[WorkOS: Modern Identity Platform for B2B SaaS](https://workos.com/?utm_source=thisweekinreact\\&utm_medium=newsletter\\&utm_campaign=q22024)**",
      "sourceMdx": "**[WorkOS: Modern Identity Platform for B2B SaaS](https://workos.com/?utm_source=thisweekinreact&utm_medium=newsletter&utm_campaign=q22024)**",
      "nodeType": "paragraph",
      "translated_content": "**[WorkOS：面向B2B SaaS的现代身份平台](https://workos.com/?utm_source=thisweekinreact&utm_medium=newsletter&utm_campaign=q22024)**"
    },
    {
      "id": "2822251a",
      "translatable": true,
      "content": "With WorkOS you can start selling to enterprises with just a few lines of code.",
      "sourceMdx": "With WorkOS you can start selling to enterprises with just a few lines of code.",
      "nodeType": "paragraph",
      "translated_content": "通过WorkOS，仅需几行代码即可开始向企业客户销售产品。"
    },
    {
      "id": "25212439",
      "translatable": true,
      "content": "🔐 WorkOS supports a complete User Management solution along with **SSO, SCIM, RBAC, & FGA**.",
      "sourceMdx": "🔐 WorkOS supports a complete User Management solution along with **SSO, SCIM, RBAC, & FGA**.",
      "nodeType": "paragraph",
      "translated_content": "🔐 WorkOS提供完整的用户管理解决方案，支持**单点登录(SSO)、跨域身份管理系统(SCIM)、基于角色的访问控制(RBAC)和细粒度授权(FGA)**。"
    },
    {
      "id": "d79a4831",
      "translatable": true,
      "content": "🏗️ The APIs are **flexible, easy-to-use, and modular**. Pick and choose what you need and integrate in minutes.",
      "sourceMdx": "🏗️ The APIs are **flexible, easy-to-use, and modular**. Pick and choose what you need and integrate in minutes.",
      "nodeType": "paragraph",
      "translated_content": "🏗️ API设计**灵活易用且模块化**，可根据需求选择功能并快速集成。"
    },
    {
      "id": "2838eb68",
      "translatable": true,
      "content": "🎨 Design and user experience are everything. From the quality of our documentation to how your users onboard, we **remove all the unnecessary complexity for developers**.",
      "sourceMdx": "🎨 Design and user experience are everything. From the quality of our documentation to how your users onboard, we **remove all the unnecessary complexity for developers**.",
      "nodeType": "paragraph",
      "translated_content": "🎨 设计与用户体验至关重要。从高质量的文档到用户引导流程，我们**为开发者消除所有不必要的复杂性**。"
    },
    {
      "id": "4be28ed1",
      "translatable": true,
      "content": "✨ User Management is **free up to 1 million MAUs** and includes bot protection, impersonation, MFA, & more.",
      "sourceMdx": "✨ User Management is **free up to 1 million MAUs** and includes bot protection, impersonation, MFA, & more.",
      "nodeType": "paragraph",
      "translated_content": "✨ 用户管理功能**在100万月活用户(MAU)以内免费**，包含机器人防护、身份模拟、多因素认证(MFA)等功能。"
    },
    {
      "id": "0e80209e",
      "translatable": true,
      "content": "🤝 WorkOS is trusted by hundreds of leading startups like **Perplexity**, **Vercel**, & **Webflow**.",
      "sourceMdx": "🤝 WorkOS is trusted by hundreds of leading startups like **Perplexity**, **Vercel**, & **Webflow**.",
      "nodeType": "paragraph",
      "translated_content": "🤝 WorkOS获得数百家领先初创企业信任，包括**Perplexity**、**Vercel**和**Webflow**。"
    },
    {
      "id": "7bc8bb24",
      "translatable": true,
      "content": "Future-proof your auth stack with [WorkOS](https://workos.com/?utm_source=thisweekinreact\\&utm_medium=newsletter\\&utm_campaign=q22024) 🚀",
      "sourceMdx": "Future-proof your auth stack with [WorkOS](https://workos.com/?utm_source=thisweekinreact&utm_medium=newsletter&utm_campaign=q22024) 🚀",
      "nodeType": "paragraph",
      "translated_content": "使用[WorkOS](https://workos.com/?utm_source=thisweekinreact&utm_medium=newsletter&utm_campaign=q22024)为您的认证系统构建面向未来的解决方案 🚀"
    },
    {
      "id": "42bfcc5d",
      "translatable": true,
      "content": "***",
      "sourceMdx": "---",
      "nodeType": "thematicBreak",
      "translated_content": "---"
    },
    {
      "id": "8172a0a5",
      "translatable": true,
      "content": "## 📱 React-Native",
      "sourceMdx": "## 📱 React-Native {#react-native}",
      "nodeType": "heading",
      "translated_content": "## 📱 React-Native {#react-native}"
    },
    {
      "id": "1b4de6df",
      "translatable": true,
      "content": "This section is authored by [Benedikt](https://twitter.com/bndkt).",
      "sourceMdx": "This section is authored by [Benedikt](https://twitter.com/bndkt).",
      "nodeType": "paragraph",
      "translated_content": "本版块由[Benedikt](https://twitter.com/bndkt)撰写。"
    },
    {
      "id": "2ddd26d5",
      "translatable": true,
      "content": "* 💸 [WithFrame - Ready to Use React Native Components](https://withfra.me/?utm_source=thisweekinreact\\&utm_medium=email\\&utm_campaign=quick-link--4)\n* 🐦 [Marc Rousavy on how to get relevant log or crash information in RN for creating issues in open source libs](https://x.com/mrousavy/status/1805637303726973437)\n* 🗓️ [The Geek Conf](https://www.thegeekconf.com/?utm_source=thisweekinreact) - 🇩🇪 Berlin - 18 & 25 July - Get a 10% discount with code \"TWIR\". Mo Khazali — Head of Mobile at Theodo UK, Matteo Collina — CTO of Platformatic.dev, and Siddharth Kshetrapal —Staff software engineer at GitHub, will speak !\n* 🗓 [Chain React Conf](https://chainreactconf.com/?utm_source=thisweekinreact) - 🇺🇸 Portland, OR - July 17-19. The U.S. React Native Conference is back with engaging talks and hands-on workshops! Get 15% off your ticket with code “TWIR”\n* 👀 [Revert \"Make the New Architecture the default\"](https://github.com/facebook/react-native/commit/37e8fa113ef6a8be7cd057b2bf6ffaa4ae6439d9): it looks like turning the New Arch on by default might be postponed and will finally not be part of v0.75?\n* 👀 [Shopify FlashList PR - New architecture support merged (but not released yet)](https://github.com/Shopify/flash-list/pull/550)\n* 👀 [Fishjam Cloud - New project by Software Mansion to bring video streaming to React Native](https://cloud.fishjam.stream/)\n* 👀 [expo-router-native-intent-demo - Using +native-intent API in Expo Router to support \"Copy to app\" functionality on iOS](https://github.com/EvanBacon/expo-router-native-intent-demo)\n* 📜 [Client guide to React Native modules](https://ospfranco.com/client-guide-to-react-native-modules/): Oscar greatly explains the differences, pros, and cons of the different ways to expose native modules to React Native, and helps us choose the best solution depending on context.\n* 📜 [Bridging React Native and Rust via JSI](https://ditto.live/blog/bridging-react-native-and-rust-via-jsi): An article by Ditto, a data sync engine written in Rust, on how they bridged their core logic (in Rust) to RN via JSI.\n* 📜 [On-device AI/ML in React Native](https://blog.swmansion.com/on-device-ai-ml-in-react-native-137918d0331b): This is fascinating stuff, which would’ve been inconceivable only a short while ago. Building real-time camera filters with on-device AI in RN.\n* 📜 [From web to native with React Native and Expo](https://expo.dev/blog/from-web-to-native-with-react-native-and-expo): Describes the journey of a web dev who built their first mobile app using RN/Expo.\n* 📜 [Just as Google, BAM believes in Kotlin Multiplatform](https://www.bam.tech/article/just-as-google-bam-believes-in-kotlin-multiplatform): The mostly RN-focused company BAM finds CMP/KMP a compelling choice among the available cross-platform solutions and explains the advantages/limitations.\n* 📜 [Expo - FCM v1 Migration Deadline Changed to July 20th](https://expo.dev/blog/fcm-v1-migration-deadline-changed-to-july-20th)\n* 🎥 [Simon Grimm - TV Apps with React Native](https://www.youtube.com/watch?v=4S7Ftg58Yeg)\n* 🎥 [JavaScript Mastery - Free 4,5h React Native Course for Beginners in 2024](https://www.youtube.com/watch?v=ZBCUegTZF7M)",
      "sourceMdx": "- 💸 [WithFrame - Ready to Use React Native Components](https://withfra.me/?utm_source=thisweekinreact&utm_medium=email&utm_campaign=quick-link--4)\n- 🐦 [Marc Rousavy on how to get relevant log or crash information in RN for creating issues in open source libs](https://x.com/mrousavy/status/1805637303726973437)\n- 🗓️ [The Geek Conf](https://www.thegeekconf.com/?utm_source=thisweekinreact) - 🇩🇪 Berlin - 18 & 25 July - Get a 10% discount with code \"TWIR\". Mo Khazali — Head of Mobile at Theodo UK, Matteo Collina — CTO of Platformatic.dev, and Siddharth Kshetrapal —Staff software engineer at GitHub, will speak !\n- 🗓 [Chain React Conf](https://chainreactconf.com/?utm_source=thisweekinreact) - 🇺🇸 Portland, OR - July 17-19. The U.S. React Native Conference is back with engaging talks and hands-on workshops! Get 15% off your ticket with code “TWIR”\n- 👀 [Revert \"Make the New Architecture the default\"](https://github.com/facebook/react-native/commit/37e8fa113ef6a8be7cd057b2bf6ffaa4ae6439d9): it looks like turning the New Arch on by default might be postponed and will finally not be part of v0.75?\n- 👀 [Shopify FlashList PR - New architecture support merged (but not released yet)](https://github.com/Shopify/flash-list/pull/550)\n- 👀 [Fishjam Cloud - New project by Software Mansion to bring video streaming to React Native](https://cloud.fishjam.stream/)\n- 👀 [expo-router-native-intent-demo - Using +native-intent API in Expo Router to support \"Copy to app\" functionality on iOS](https://github.com/EvanBacon/expo-router-native-intent-demo)\n- 📜 [Client guide to React Native modules](https://ospfranco.com/client-guide-to-react-native-modules/): Oscar greatly explains the differences, pros, and cons of the different ways to expose native modules to React Native, and helps us choose the best solution depending on context.\n- 📜 [Bridging React Native and Rust via JSI](https://ditto.live/blog/bridging-react-native-and-rust-via-jsi): An article by Ditto, a data sync engine written in Rust, on how they bridged their core logic (in Rust) to RN via JSI.\n- 📜 [On-device AI/ML in React Native](https://blog.swmansion.com/on-device-ai-ml-in-react-native-137918d0331b): This is fascinating stuff, which would’ve been inconceivable only a short while ago. Building real-time camera filters with on-device AI in RN.\n- 📜 [From web to native with React Native and Expo](https://expo.dev/blog/from-web-to-native-with-react-native-and-expo): Describes the journey of a web dev who built their first mobile app using RN/Expo.\n- 📜 [Just as Google, BAM believes in Kotlin Multiplatform](https://www.bam.tech/article/just-as-google-bam-believes-in-kotlin-multiplatform): The mostly RN-focused company BAM finds CMP/KMP a compelling choice among the available cross-platform solutions and explains the advantages/limitations.\n- 📜 [Expo - FCM v1 Migration Deadline Changed to July 20th](https://expo.dev/blog/fcm-v1-migration-deadline-changed-to-july-20th)\n- 🎥 [Simon Grimm - TV Apps with React Native](https://www.youtube.com/watch?v=4S7Ftg58Yeg)\n- 🎥 [JavaScript Mastery - Free 4,5h React Native Course for Beginners in 2024](https://www.youtube.com/watch?v=ZBCUegTZF7M)",
      "nodeType": "list",
      "translated_content": "- 💸 [WithFrame - 开箱即用的React Native组件库](https://withfra.me/?utm_source=thisweekinreact&utm_medium=email&utm_campaign=quick-link--4)\n- 🐦 [Marc Rousavy分享如何获取RN相关日志或崩溃信息以提交开源库问题](https://x.com/mrousavy/status/1805637303726973437)\n- 🗓️ [The Geek Conf技术大会](https://www.thegeekconf.com/?utm_source=thisweekinreact) - 🇩🇪 柏林 - 7月18日&25日 - 使用优惠码\"TWIR\"可享9折。演讲嘉宾包括：Theodo UK移动端负责人Mo Khazali、Platformatic.dev CTO Matteo Collina、GitHub高级软件工程师Siddharth Kshetrapal！\n- 🗓 [Chain React Conf大会](https://chainreactconf.com/?utm_source=thisweekinreact) - 🇺🇸 波特兰 - 7月17-19日。美国React Native年度盛会回归，含主题演讲与实操研讨会！使用优惠码\"TWIR\"可享85折\n- 👀 [Revert \"将新架构设为默认选项\"](https://github.com/facebook/react-native/commit/37e8fa113ef6a8be7cd057b2bf6ffaa4ae6439d9)：新架构可能推迟启用，最终不会包含在v0.75版本中？\n- 👀 [Shopify FlashList PR - 新架构支持已合并（尚未发布）](https://github.com/Shopify/flash-list/pull/550)\n- 👀 [Fishjam Cloud - Software Mansion新项目，为React Native带来视频流功能](https://cloud.fishjam.stream/)\n- 👀 [expo-router-native-intent-demo - 在Expo Router中使用+native-intent API实现iOS\"复制到应用\"功能](https://github.com/EvanBacon/expo-router-native-intent-demo)\n- 📜 [React Native模块客户端指南](https://ospfranco.com/client-guide-to-react-native-modules/)：Oscar详细解析了向React Native暴露原生模块的不同方式及其优缺点，帮助开发者根据场景选择最佳方案\n- 📜 [通过JSI桥接React Native与Rust](https://ditto.live/blog/bridging-react-native-and-rust-via-jsi)：数据同步引擎Ditto撰文介绍如何通过JSI将其Rust核心逻辑桥接到RN\n- 📜 [React Native中的设备端AI/ML](https://blog.swmansion.com/on-device-ai-ml-in-react-native-137918d0331b)：这项令人惊叹的技术在不久前还难以想象，文章展示了如何在RN中构建基于设备端AI的实时相机滤镜\n- 📜 [从Web到原生：React Native与Expo开发之旅](https://expo.dev/blog/from-web-to-native-with-react-native-and-expo)：记录一位Web开发者使用RN/Expo构建首个移动应用的经验\n- 📜 [与Google一样，BAM坚信Kotlin多平台方案](https://www.bam.tech/article/just-as-google-bam-believes-in-kotlin-multiplatform)：专注RN的BAM公司认为KMP在跨平台方案中极具潜力，并分析了其优势与局限\n- 📜 [Expo - FCM v1迁移截止日期调整为7月20日](https://expo.dev/blog/fcm-v1-migration-deadline-changed-to-july-20th)\n- 🎥 [Simon Grimm - 用React Native开发电视应用](https://www.youtube.com/watch?v=4S7Ftg58Yeg)\n- 🎥 [JavaScript Mastery - 2024年React Native初学者免费4.5小时课程](https://www.youtube.com/watch?v=ZBCUegTZF7M)"
    },
    {
      "id": "f1a2be1a",
      "translatable": true,
      "content": "***",
      "sourceMdx": "---",
      "nodeType": "thematicBreak",
      "translated_content": "---"
    },
    {
      "id": "13292277",
      "translatable": true,
      "content": "## 🔀 Other",
      "sourceMdx": "## 🔀 Other {#other}",
      "nodeType": "heading",
      "translated_content": "## 🔀 其他资源 {#other}"
    },
    {
      "id": "292df6cb",
      "translatable": true,
      "content": "* 📊 [State of JavaScript 2023 - Survey Results](https://2023.stateofjs.com/en-US)\n* 📜 [How JavaScript Is Finally Improving the Module Experience](https://thenewstack.io/how-javascript-is-finally-improving-the-module-experience/)\n* 📜 [Inline conditionals in CSS, now?](https://lea.verou.me/blog/2024/css-conditionals-now/)\n* 📜 [GitHub Copilot Extensions are all you need](https://code.visualstudio.com/blogs/2024/06/24/extensions-are-all-you-need)\n* 📜 [MDN - New JavaScript Set methods](https://developer.mozilla.org/en-US/blog/javascript-set-methods/)\n* 📦 [TypeScript 5.5 - Inferred type predicates, narrowing for indexed access, JSDoc @import](https://devblogs.microsoft.com/typescript/announcing-typescript-5-5/)\n* 📦 [farm - Extremely fast Vite-compatible web build tool written in Rust](https://github.com/farm-fe/farm)\n* 📦 [Node 20.15 - Test plans, –inspect-await](https://nodejs.org/en/blog/release/v20.15.0)\n* 📦 [node-swift - Create Node modules in Swift](https://github.com/kabiroberai/node-swift)\n* 🎥 [Matt Pocock TypeScript 5.5 is a banger](https://www.youtube.com/watch?v=sciBO_IaxTw)",
      "sourceMdx": "- 📊 [State of JavaScript 2023 - Survey Results](https://2023.stateofjs.com/en-US)\n- 📜 [How JavaScript Is Finally Improving the Module Experience](https://thenewstack.io/how-javascript-is-finally-improving-the-module-experience/)\n- 📜 [Inline conditionals in CSS, now?](https://lea.verou.me/blog/2024/css-conditionals-now/)\n- 📜 [GitHub Copilot Extensions are all you need](https://code.visualstudio.com/blogs/2024/06/24/extensions-are-all-you-need)\n- 📜 [MDN - New JavaScript Set methods](https://developer.mozilla.org/en-US/blog/javascript-set-methods/)\n- 📦 [TypeScript 5.5 - Inferred type predicates, narrowing for indexed access, JSDoc @import](https://devblogs.microsoft.com/typescript/announcing-typescript-5-5/)\n- 📦 [farm - Extremely fast Vite-compatible web build tool written in Rust](https://github.com/farm-fe/farm)\n- 📦 [Node 20.15 - Test plans, –inspect-await](https://nodejs.org/en/blog/release/v20.15.0)\n- 📦 [node-swift - Create Node modules in Swift](https://github.com/kabiroberai/node-swift)\n- 🎥 [Matt Pocock TypeScript 5.5 is a banger](https://www.youtube.com/watch?v=sciBO_IaxTw)",
      "nodeType": "list",
      "translated_content": "- 📊 [2023年JavaScript现状调查报告](https://2023.stateofjs.com/en-US)\n- 📜 [JavaScript如何最终改善模块体验](https://thenewstack.io/how-javascript-is-finally-improving-the-module-experience/)\n- 📜 [CSS现在支持内联条件语句了？](https://lea.verou.me/blog/2024/css-conditionals-now/)\n- 📜 [GitHub Copilot扩展就是你所需的一切](https://code.visualstudio.com/blogs/2024/06/24/extensions-are-all-you-need)\n- 📜 [MDN - JavaScript新增Set方法](https://developer.mozilla.org/en-US/blog/javascript-set-methods/)\n- 📦 [TypeScript 5.5 - 推断类型谓词、索引访问类型收窄、JSDoc @import支持](https://devblogs.microsoft.com/typescript/announcing-typescript-5-5/)\n- 📦 [farm - 基于Rust开发的极速Vite兼容Web构建工具](https://github.com/farm-fe/farm)\n- 📦 [Node 20.15 - 测试计划、–inspect-await功能](https://nodejs.org/en/blog/release/v20.15.0)\n- 📦 [node-swift - 用Swift编写Node模块](https://github.com/kabiroberai/node-swift)\n- 🎥 [Matt Pocock：TypeScript 5.5太棒了](https://www.youtube.com/watch?v=sciBO_IaxTw)"
    },
    {
      "id": "ac00ead3",
      "translatable": true,
      "content": "***",
      "sourceMdx": "---",
      "nodeType": "thematicBreak",
      "translated_content": "---"
    },
    {
      "id": "671cbf7c",
      "translatable": true,
      "content": "## 🤭 Fun",
      "sourceMdx": "## 🤭 Fun {#fun}",
      "nodeType": "heading",
      "translated_content": "## 🤭 趣味一刻 {#fun}"
    },
    {
      "id": "4c787c52",
      "translatable": true,
      "content": "[![alt](/emails/issues/191/meme.jpg)](https://x.com/ccccjjjjeeee/status/1804814043359621254)",
      "sourceMdx": "[![alt](/emails/issues/191/meme.jpg)](https://x.com/ccccjjjjeeee/status/1804814043359621254)",
      "nodeType": "paragraph",
      "translated_content": "[![alt](/emails/issues/191/meme.jpg)](https://x.com/ccccjjjjeeee/status/1804814043359621254)"
    },
    {
      "id": "63565425",
      "translatable": true,
      "content": "See ya! 👋",
      "sourceMdx": "See ya! 👋",
      "nodeType": "paragraph",
      "translated_content": "下次见！👋"
    }
  ]
}